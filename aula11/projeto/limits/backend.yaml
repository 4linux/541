---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: mysql:5.7
        imagePullPolicy: IfNotPresent
        name: mysql
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: backend-configmaps
              key: MYSQL_DATABASE   
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: backend-configmaps
              key: MYSQL_USER   
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: MYSQL_PASSWORD   
        resources:
          requests:
            memory: "64Mi"
            cpu: "0.2"
          limits:
            memory: "512Mi"
            cpu: "0.4"
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              set -ex
              mysql -u$MYSQL_USER -p$MYSQL_PASSWORD -e 'SELECT 1' &> /dev/null
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1  
          failureThreshold: 3
        volumeMounts:
        - name: backend-claim-longhorn
          mountPath: /var/lib/mysql
        - name: mysql-db-config
          mountPath: /docker-entrypoint-initdb.d/
        - name: dump-usuarios
          mountPath: /dump/
      volumes:
        - name: mysql-db-config
          configMap:
            name: mysql-db-config
        - name: dump-usuarios
          configMap:
            name: dump-usuarios
        - name: backend-claim-longhorn
          persistentVolumeClaim:
            claimName: backend-claim-longhorn
