---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: Garantindo /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
      with_items:
        - 172.16.1.100 kube-master
        - 172.16.1.101 kube-node1
        - 172.16.1.102 kube-node2
        - 172.16.1.103 kube-infra
        - 172.16.1.202 docker-registry

    - name: Remove swap do arquivo /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Desativa o swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Cria o arquivo containerd.conf
      file:
        path: /etc/modules-load.d/containerd.conf
        state: touch

    - name: Configurando modulos
      lineinfile:
        path: /etc/modules-load.d/containerd.conf
        line: "{{ item }}"
      with_items:
        - overlay
        - br_netfilter

    - name: Carregando modulos
      shell: modprobe overlay && modprobe br_netfilter

    - name: Cria o arquivo dkubernetes.conf
      file:
        path: /etc/sysctl.d/kubernetes.conf
        state: touch

    - name: Configurando sysctl
      lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: "{{ item }}"
      with_items:
        - net.bridge.bridge-nf-call-ip6tables = 1
        - net.bridge.bridge-nf-call-iptables = 1
        - net.ipv4.ip_forward = 1

    - name: Aplicando sysctl
      shell: sysctl --system

    - name: Adiciona usuario suporte
      user:
        name: suporte
        shell: /bin/bash
        password : $1$QbUARykG$p2nthVG8AkDvabKPHwboa1

    - name: Instala pacotes que permitem que o apt seja usado sobre HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common
        - mysql-client
        - nfs-common
        - snapd
        - git
        - vim

    - name: Clona repositÃ³rio com os arquivos do curso para a HOME do usuario suporte
      git:
        repo: 'https://github.com/4linux/541.git'
        dest: /home/suporte/541

    - name: Adiciona uma chave de assinatura apt para o Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adiciona repositorio apt para versao estavel
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Instala o Containerd
      apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: Criar conf default do Containerd
      shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

    - name: Ativa o Systemd no arquivo config.toml
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Ativa o uso de pluings no arquivo config.toml
      replace:
        path: /etc/containerd/config.toml
        regexp: '^disabled_plugins ='
        replace: '#disabled_plugins ='

    - name: Reinicia o containerd
      service:
        name: containerd
        state: restarted

    - name: Criando o arquivo registry.crt
      copy:
        src: files/registry.crt
        dest: /usr/local/share/ca-certificates/
        mode: 0644

    - name: Criando o arquivo registry.key
      copy:
        src: files/registry.key
        dest: /usr/local/share/ca-certificates/
        mode: 0600

    - name: Atualiza certificados
      shell: update-ca-certificates

    - name: Adiciona uma chave de assinatura apt para o Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adiciona repositorio apt para Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Instala os pacotes do Kubernetes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - kubelet=1.26.8-00
        - kubeadm=1.26.8-00
        - kubectl=1.26.8-00

    - name: Copia o arquivo join-command.sh
      copy: src=join-command dest=/tmp/join-command.sh mode=0777

    - name: Adiciona o node no cluster
      command: sh /tmp/join-command.sh
          
