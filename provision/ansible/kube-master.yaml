---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: Garantindo /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
      with_items:
        - 172.16.1.100 kube-master
        - 172.16.1.101 kube-node1
        - 172.16.1.102 kube-node2
        - 172.16.1.103 registry

    - name: Instala pacotes base do curso
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
        - mysql-client
        - snapd
        
    - name: Clona repositório com os arquivos do curso para a HOME do usuario suporte
      git:
        repo: 'https://github.com/4linux/4541.git'
        dest: /home/suporte/4541

    - name: Cria o diretório .ssh
      file:
        path: /home/suporte/.ssh
        state: directory
        owner: suporte
        group: suporte
        mode: '0755'
        
    - name: Criando o arquivo id_rsa
      copy:
        src: files/id_rsa
        dest: /home/suporte/.ssh/id_rsa
        owner: suporte
        group: suporte
        mode: 0600
        
    - name: Criando o arquivo id_rsa.pub
      copy:
        src: files/id_rsa.pub
        dest: /home/suporte/.ssh/id_rsa.pub
        owner: suporte
        group: suporte
        mode: 0644
        
    - name: Criando o arquivo etcd-v3.3.13-linux-amd64.tar
      copy:
        src: files/etcd-v3.3.13-linux-amd64.tar
        dest: /root/etcd-v3.3.13-linux-amd64.tar
        owner: root
        group: root
        mode: '0644'   

    - name: Adiciona o usuario suporte no grupo docker
      user:
        name: suporte
        group: docker

    - name: Cria o diretório registry:5000
      file:
        path: /etc/docker/certs.d/registry:5000
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Criando o arquivo ca.crt
      copy:
        src: files/ca.crt
        dest: /etc/docker/certs.d/registry:5000
        owner: suporte
        group: suporte
        mode: '0644'
        
    - name: Remove swap do arquivo /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Desativa o swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Instala os pacotes do Kubernetes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - kubelet=1.21.1-00
        - kubeadm=1.21.1-00
        - kubectl=1.21.1-00

    - name: Reinicia o kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Inicializa o cluster Kubernetes atraves da ferramenta kubeadm
      shell: kubeadm init --apiserver-advertise-address="172.16.1.100" --apiserver-cert-extra-sans="172.16.1.100" --node-name kube-master --pod-network-cidr=192.168.0.0/16 --kubernetes-version=1.21.1 --ignore-preflight-errors=all > /opt/init_cluster
      args:
        creates: /opt/init_cluster
        
    - name: Cria o diretório .kube para o usuário vagrant
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: '0755'

    - name: Configura o kubeconfig para o usuario vagrant
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes

    - name: Definir permissao de acesso ao arquivo config
      file:
        path: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: Cria o diretório .kube para o usuário suporte
      file:
        path: /home/suporte/.kube
        state: directory
        owner: suporte
        group: suporte
        mode: '0755'

    - name: Configura o kubeconfig para o usuario suporte
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/suporte/.kube/config
        remote_src: yes

    - name: Definir permissao de acesso ao arquivo config
      file:
        path: /home/suporte/.kube/config
        owner: suporte
        group: suporte
        mode: '0644'

    - name: Instala a rede Flannel no Cluster
      become: false
      command: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
    - name: Gera o comando para o join de novos nodes
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copia o comando do join no arquivo local
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
