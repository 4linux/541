---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: Garantindo /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
      with_items:
        - 172.16.0.150 kube-balancer
        - 172.16.0.151 kube-multi-master1
        - 172.16.0.152 kube-multi-master2
        - 172.16.0.153 kube-multi-master3

    - name: Adiciona usuario suporte
      user:
        name: suporte
        shell: /bin/bash
        password : $1$QbUARykG$p2nthVG8AkDvabKPHwboa1

    - name: Criando o arquivo 98_4linux
      copy:
        src: files/98_4linux
        dest: /etc/sudoers.d
        mode: 0644

    - name: Instala pacotes que permitem que o apt seja usado sobre HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - git
        - vim
        - ebtables
        - ethtool
        - conntrack

    - name: Clona repositorio com os arquivos do curso para a HOME do usuario suporte
      git:
        repo: 'https://github.com/4linux/4541.git'
        dest: /home/suporte/4541
        
    - name: Definir permissao de acesso da HOME do usuario suporte
      file:
        path: /home/suporte
        owner: suporte
        group: suporte
        state: directory
        recurse: yes
        mode: 0755

    - name: Adiciona uma chave de assinatura apt para o Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adiciona repositorio apt para versao estavel
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Instala o Docker e suas dependencias
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Adiciona o usuario suporte no grupo docker
      user:
        name: suporte
        group: docker

    - name: Remove swap do arquivo /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Desativa o swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Realiza o download do binario kubeadm
      get_url:
        url: https://dl.k8s.io/release/v1.21.1/bin/linux/amd64/kubeadm
        dest: /tmp/kubeadm
        mode: '0755'

    - name: Instala o kubeadm
      shell: "install -o root -g root -m 0755 /tmp/kubeadm /usr/bin/kubeadm"
      args:
        warn: false      

    - name: Realiza o download do binario kubelet
      get_url:
        url: https://dl.k8s.io/release/v1.21.1/bin/linux/amd64/kubelet
        dest: /tmp/kubelet
        mode: '0755'

    - name: Instala o kubelet
      shell: "install -o root -g root -m 0755 /tmp/kubelet /usr/bin/kubelet"
      args:
        warn: false      

    - name: Realiza o download do binario kubectl
      get_url:
        url: https://dl.k8s.io/release/v1.21.1/bin/linux/amd64/kubectl
        dest: /tmp/kubectl
        mode: '0755'

    - name: Instala o kubectl
      shell: "install -o root -g root -m 0755 /tmp/kubectl /usr/bin/kubectl"
      args:
        warn: false      

    - name: Criar diretório /etc/systemd/system/kubelet.service.d para apt do Kubernetes
      file:
        path: /etc/systemd/system/kubelet.service.d
        state: directory

    - name: Criar o arquivo de configuração 10-kubeadm.conf
      copy:
        content: |
          [Service]
          Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
          Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
          EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
          EnvironmentFile=-/etc/default/kubelet
          ExecStart=
          ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
        dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

    - name: Criar o arquivo de serviço kubelet
      copy:
        content: |
          [Unit]
          Description=kubelet: The Kubernetes Node Agent
          Documentation=https://kubernetes.io/docs/home/
          Wants=network-online.target
          After=network-online.target

          [Service]
          ExecStart=/usr/bin/kubelet
          Restart=always
          StartLimitInterval=0
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
        dest: /lib/systemd/system/kubelet.service

    - name: Recarregar o daemon do systemd
      systemd:
        daemon_reload: yes

    - name: Habilitar o serviço kubelet
      systemd:
        name: kubelet
        enabled: yes
        state: started
